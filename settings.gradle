import groovy.json.JsonOutput
import groovy.json.JsonSlurper
import org.gradle.api.initialization.resolve.RepositoriesMode
import org.gradle.api.initialization.resolve.RulesMode

pluginManagement {
    repositories {
        gradlePluginPortal()
        maven { url = 'https://maven.neoforged.net/releases' }
    }
    plugins {
        id 'com.diffplug.spotless' version '6.25.0'
        // https://projects.neoforged.net/neoforged/ModDevGradle
        id 'net.neoforged.moddev' version '2.0.74'
        id 'net.neoforged.moddev.repositories' version '2.0.74'
        id 'dev.kikugie.stonecutter' version '0.7.10'
    }
}

plugins {
    id 'net.neoforged.moddev.repositories'
    id 'org.gradle.toolchains.foojay-resolver-convention' version '0.9.0'
    id 'dev.kikugie.stonecutter'
}

def scConfig = new JsonSlurper().parse(file("stonecutter.json"))
def scVersions = []
if (scConfig.versions instanceof Map) {
    scConfig.versions.each { key, value ->
        scVersions << [
                name      : key,
                properties: [
                        MC      : value.mc ?: value.MC ?: "",
                        NEOFORGE: value.neo ?: value.NEOFORGE ?: ""
                ]
        ]
    }
} else {
    scVersions = scConfig.versions
}
def scLegacyVersions = scVersions.findAll { it.name == scConfig.default }
def scLegacyRoadmap = scVersions.findAll { it.name != scConfig.default }

def scLegacy = [
        vcs     : scConfig.default,
        versions: scLegacyVersions.collect { version ->
            [
                    project   : version.name,
                    version   : version.name,
                    properties: version.properties
            ]
        },
        roadmap : scLegacyRoadmap.collect { version ->
            [
                    project   : version.name,
                    version   : version.name,
                    properties: version.properties
            ]
        }
]

def scLegacyFile = new File(settingsDir, ".gradle/stonecutter.generated.json")
scLegacyFile.parentFile.mkdirs()
scLegacyFile.text = JsonOutput.prettyPrint(JsonOutput.toJson(scLegacy))

stonecutter.create(rootProject, scLegacyFile)

def scDefault = scVersions.find { it.name == scConfig.default } ?: scVersions.first()

gradle.rootProject {
    def mcVersion = providers.gradleProperty("MC").getOrElse(findProperty("minecraft_version") ?: "")
    if (!mcVersion || mcVersion.contains('$')) {
        mcVersion = scDefault?.properties?.MC ?: ""
    }

    def neoForgeVersion = providers.gradleProperty("NEOFORGE").getOrElse(findProperty("neoforge_version") ?: "")
    if (!neoForgeVersion || neoForgeVersion.contains('$')) {
        neoForgeVersion = scDefault?.properties?.NEOFORGE ?: ""
    }

    allprojects { proj ->
        if (mcVersion) {
            proj.extensions.extraProperties.set("MC", mcVersion)
            proj.extensions.extraProperties.set("minecraft_version", mcVersion)
        }
        if (neoForgeVersion) {
            proj.extensions.extraProperties.set("NEOFORGE", neoForgeVersion)
            proj.extensions.extraProperties.set("neoforge_version", neoForgeVersion)
            proj.extensions.extraProperties.set("neoforge_version_range", "[${neoForgeVersion},)")
        }
    }
}

dependencyResolutionManagement {
    repositoriesMode = RepositoriesMode.PREFER_PROJECT
    rulesMode = RulesMode.FAIL_ON_PROJECT_RULES
    repositories {
        maven {
            url = 'https://maven.shedaniel.me/'
            content {
                includeGroup 'me.shedaniel'
                includeGroup 'me.shedaniel.cloth'
                includeGroup 'dev.architectury'
            }
        }
        maven {
            url = 'https://maven2.bai.lol'
            content {
                includeGroup 'mcp.mobius.waila'
                includeGroup 'lol.bai'
            }
        }
        maven {
            name = 'TerraformersMC'
            url = 'https://maven.terraformersmc.com/'
            content {
                includeGroup 'dev.emi'
            }
        }
        maven {
            name = 'cursemaven'
            url = 'https://www.cursemaven.com'
            content {
                includeGroup 'curse.maven'
            }
        }
        maven { // for TOP
            url = 'https://maven.k-4u.nl/'
            content {
                includeGroup 'mcjty.theoneprobe'
            }
        }
        maven {
            url = 'https://maven.theillusivec4.top/'
            content {
                includeGroup 'top.theillusivec4.curios'
            }
        }
        maven {
            url = 'https://maven.blamejared.com/'
            content {
                includeGroup 'mezz.jei'
            }
        }
        mavenLocal() {
            content {
                includeModule('org.appliedenergistics', 'guideme')
            }
        }
        mavenCentral()
    }
}

stonecutter {
    shared {
        set("MC", "1.21.4")
        set("NEOFORGE", "21.4.154")
    }
}

rootProject.name = 'ae2'
