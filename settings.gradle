import dev.kikugie.stonecutter.data.StonecutterProject
import groovy.json.JsonSlurper
import org.gradle.api.initialization.resolve.RepositoriesMode
import org.gradle.api.initialization.resolve.RulesMode

pluginManagement {
    repositories {
        gradlePluginPortal()
        maven { url = 'https://maven.neoforged.net/releases' }
    }
    plugins {
        id 'com.diffplug.spotless' version '6.25.0'
        id 'net.neoforged.moddev' version '2.0.113'
        id 'net.neoforged.moddev.repositories' version '2.0.113'
        id 'dev.kikugie.stonecutter' version '0.7.10'
    }
}

plugins {
    id 'net.neoforged.moddev.repositories'
    id 'org.gradle.toolchains.foojay-resolver-convention' version '0.9.0'
    id 'dev.kikugie.stonecutter'
}

def stonecutterConfigFile = file("stonecutter.json")
def stonecutterConfig = new JsonSlurper().parse(stonecutterConfigFile)

def stonecutterVersions = (stonecutterConfig.versions ?: []) as List<String>
def stonecutterProjects = stonecutterVersions.collect { version ->
    new StonecutterProject(version, version)
}

stonecutter.shared {
    versions(stonecutterProjects)
    vcsVersion = "1.21.4"
    kotlinController = true
    centralScript = 'stonecutter.gradle.kts'
    mapBuilds { target, project ->
        "build.neoforge.gradle.kts"
    }
}

stonecutter.create(rootProject, stonecutterConfigFile)

stonecutter {
    kotlinController = true
    centralScript = 'stonecutter.gradle.kts'
}

def stonecutterTargets = ((stonecutterConfig.targets ?: [:]) as Map<String, ?>)
        .collectEntries { key, value ->
            Map<?, ?> data = value instanceof Map ? (Map<?, ?>) value : [:]
            [
                    (key): [
                            MC      : (data.MC ?: key),
                            NEOFORGE: data.NEOFORGE
                    ]
            ]
        }

gradle.rootProject { root ->
    root.extensions.extraProperties.set("stonecutterVersionMatrix", stonecutterTargets)

    def defaultVersion = (stonecutterConfig.default ?: stonecutterConfig.vcs ?: '1.21.4') as String
    def defaults = stonecutterTargets[defaultVersion] ?: [:]

    def mcVersion = providers.gradleProperty("MC").getOrElse(defaults.MC ?: defaultVersion)
    def neoForgeVersion = providers.gradleProperty("NEOFORGE").getOrElse(defaults.NEOFORGE ?: '')

    allprojects { proj ->
        if (mcVersion) {
            proj.extensions.extraProperties.set("MC", mcVersion)
            proj.extensions.extraProperties.set("minecraft_version", mcVersion)
        }
        if (neoForgeVersion) {
            proj.extensions.extraProperties.set("NEOFORGE", neoForgeVersion)
            proj.extensions.extraProperties.set("neoforge_version", neoForgeVersion)
            proj.extensions.extraProperties.set("neoforge_version_range", "[${neoForgeVersion},)")
        }
    }
}

dependencyResolutionManagement {
    repositoriesMode = RepositoriesMode.PREFER_PROJECT
    rulesMode = RulesMode.FAIL_ON_PROJECT_RULES
    repositories {
        maven {
            url = 'https://maven.shedaniel.me/'
            content {
                includeGroup 'me.shedaniel'
                includeGroup 'me.shedaniel.cloth'
                includeGroup 'dev.architectury'
            }
        }
        maven {
            url = 'https://maven2.bai.lol'
            content {
                includeGroup 'mcp.mobius.waila'
                includeGroup 'lol.bai'
            }
        }
        maven {
            name = 'TerraformersMC'
            url = 'https://maven.terraformersmc.com/'
            content {
                includeGroup 'dev.emi'
            }
        }
        maven {
            name = 'cursemaven'
            url = 'https://www.cursemaven.com'
            content {
                includeGroup 'curse.maven'
            }
        }
        maven {
            url = 'https://maven.k-4u.nl/'
            content {
                includeGroup 'mcjty.theoneprobe'
            }
        }
        maven {
            url = 'https://maven.theillusivec4.top/'
            content {
                includeGroup 'top.theillusivec4.curios'
            }
        }
        maven {
            url = 'https://maven.blamejared.com/'
            content {
                includeGroup 'mezz.jei'
            }
        }
        mavenLocal() {
            content {
                includeModule('org.appliedenergistics', 'guideme')
            }
        }
        mavenCentral()
    }
}

rootProject.name = 'ae2'
